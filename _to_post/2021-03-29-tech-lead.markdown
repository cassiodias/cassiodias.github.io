---
layout: post
title:  "Tech Lead Expectations for Engineering Projects"
date:   2021-03-29 15:45
categories: coding, test, stub
---

# Navigating the Role of a Tech Lead in Engineering Projects

As a project engineering lead, you're stepping into a pivotal role that can significantly impact your team's success. It's essential to understand your responsibilities and set clear expectations. In this guide, we'll outline the key aspects of your role and what is expected of you.

## Understanding Project Roles

In any engineering project, there are distinct roles that play a crucial part in its success:

- **Product Manager (PM):** The PM owns product decisions, focusing on the "what" and external stakeholder management.

- **Engineering Manager (EM):** The EM is responsible for staffing decisions and holds accountability for execution, focusing on the "who."

- **Project Lead:** As the project lead, you are an engineer responsible for execution, focusing on the "how." Your role involves various tasks, including:

  - Setting up a framework for collaboration.
  - Breaking down the project into milestones and providing estimates.
  - Communicating project status to stakeholders.
  - Managing and identifying risks.
  - Guiding the team towards successful delivery.
  - Motivating the team.

It's important to note the distinction between "responsible" and "accountable." While you are responsible for project execution, accountability means that if something goes significantly wrong, you will be held responsible.

## Setting Up a Framework for Collaboration

### Initial Setup

1. **Identify Stakeholders:** Create a list of project stakeholders and ensure they are included in regular updates. Collaborate closely with PMs and EMs.

2. **Kick Off Meeting:** Schedule a kick-off meeting involving the PM, Design, Data Science, and EM to discuss the project's objectives and milestones. This meeting should clarify the project's purpose and measurable goals.

3. **Documentation & Collaboration:** Set up and maintain project documentation, update team staffing documents, and create a collaborative environment using tools like JIRA, chat channels, email groups, Google Drive folders, and a wiki page.

4. **Day-to-Day Project Management:** Establish efficient ways of getting frequent updates from the team, such as standup meetings or other syncing methods. Demo progress regularly, even if it's not visually apparent, and follow project management guidelines.

5. **Encourage Face-to-Face Interaction:** Promote face-to-face interaction, especially if the project involves collaboration across different offices or teams. Consider video meetings or in-person collaboration for an effective project kick-off.

## Managing Risks

1. **Understand the Project:** Gain a high-level understanding of all aspects of the project, including mobile and backend components. Collaborate closely with engineers from different stacks to build relationships and gather context.

2. **Create a Knowledge Inventory:** List the services and libraries involved in the project, noting team members' familiarity with them. If working in an unfamiliar codebase, assume the worst when providing time and risk estimates.

3. **Risk Identification:** Be honest about risks as they arise. Communicate these risks in standup meetings, weekly meetings, or immediately with your EM. Timing, scope, and resources are interconnected, so addressing risks promptly is crucial.

4. **Accountability:** You are accountable for keeping the project on track across all stacks. Proactively communicate project status, whether it's on track or facing challenges.

## Communicating Project Status to Stakeholders

1. **Internal Updates:** Keep the team and internal stakeholders informed about project progress through weekly team meetings and demos. Consider sending weekly update emails to ensure everyone is on the same page.

2. **Status Tracking:** Maintain up-to-date status tracking documents that provide insights into project progress, such as staffing documents, feature readiness checklists, and developer confidence tools.

3. **Identify Additional Stakeholders:** Assist the PM in identifying any stakeholders outside the team who need to be aware of the project. Leverage your deeper context to determine relevant individuals or teams.

## Helping the Team Focus and Delegation

1. **Prioritization:** Assist engineers in focusing on the next important task. Emphasize taking one step at a time towards the next shippable milestone.

2. **Delegation:** Delegate tasks where it makes sense. You can delegate upwards to your manager or PM, as well as to team members. Clearly communicate your expectations when delegating responsibilities.

## Motivating the Team

1. **Team Engagement:** Foster team engagement by organizing enjoyable activities such as team lunches, dinners, or outings.

2. **Celebrate Achievements:** Celebrate small wins, milestone achievements, and individuals who contribute to the project's success.

3. **Involvement:** Encourage team members to participate in project management and welcome their suggestions. The project's success relies on the involvement of everyone on the team.

4. **Overcommunication:** Communicate project milestones widely within the team. Share updates via email, announcements, or chats to celebrate both significant and minor milestones.

## Checklist for First-Time Projects

When managing your first project, consider the following checklist to increase the likelihood of success:

- Lead a kickoff meeting with an agenda and all stakeholders present.
- Break down milestones and assign estimates.
- Follow the RFC (Request for Comments) process when necessary.
- Send out regular weekly update emails to internal stakeholders.
- Conduct daily standup meetings with clear agendas and notes.
- Set weekly team goals.
- Hold regular progress demos.
- Perform retrospectives to gather feedback and improve processes.

## Resources

### Documentation

- Create a wiki page on the team's wiki page and keep it updated with project resources.
- Maintain a Feature Readiness Checklist for the project.
- Consider sending weekly update emails to internal stakeholders.
- Utilize a Developer Confidence Tracker for micro-level project management.
- Use a Timeline template for visualizing project schedules.

### Good JIRA/Phabricator Usage

- Ensure that every task has a corresponding ticket.
- Keep tickets clear and easy to understand for any team member.
- Reflect the current state of work in JIRA/Phabricator.
- Consider using Phabricator Milestones or JIRA Sprints for efficient project management.

### Project Management Methodology

Combine macro and micro-level project management techniques:

**Macro Level Project Management (High Level):**

- Break the work into shippable milestones.
- Define major work items within milestones (user stories).
- Estimate work items in ideal developer days.
- Apply organizational overhead and map tasks to the staffing document.

**Micro Level Project Management (Day to Day):**

- Break down user stories into smaller tasks.
- Provide feedback on risks and delays to macro-level planning.
- Use Phabricator as the source of task truth.

Consider an agile framework for micro-level project management, breaking down user stories, estimating tasks, and tracking progress regularly.

## Conclusion

As a tech lead in an engineering project, your role is multifaceted and pivotal. By understanding your responsibilities and effectively collaborating with your team and stakeholders, you can drive your projects to success. Use the provided resources and checklists to guide you in your journey as a project engineering lead. Remember that continuous improvement and open communication are keys to achieving your project's goals.
